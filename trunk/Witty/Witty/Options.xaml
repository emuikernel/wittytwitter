<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	xmlns:Witty="clr-namespace:Witty"
	x:Class="Witty.Options"
	x:Name="Window"
	Title="Options"
	Width="500" Height="450" 
  KeyDown="Window_OnKeyDown" 
  WindowStartupLocation="CenterOwner"
  xmlns:lib="clr-namespace:Microsoft.Samples.KMoore.WPFSamples.Zap;assembly=J832.Wpf.BagOTricksLib"
  ShowInTaskbar="False" xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

  <Window.Resources>
    <Witty:RoundConverter x:Key="RoundConverter"/>
  </Window.Resources>

  <DockPanel x:Name="LayoutRoot">
    <!-- Header -->
    <Border DockPanel.Dock="Top" Padding="0,5,0,5" x:Name="HeaderBorder" Background="{DynamicResource PrimaryBackgroundBrush}">
      <TextBlock Text="Witty Options" TextWrapping="Wrap" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,2,0,0" Foreground="{DynamicResource HeaderForegroundBrush}"/>
    </Border>
    <!-- Footer -->
    <Border DockPanel.Dock="Bottom" Padding="0,5,0,5" x:Name="FooterBorder" Background="{DynamicResource StatusBackgroundBrush}">
      <Button Content="Done" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="100" IsDefault="True" x:Name="DoneButton" Click="DoneButton_Click"/>
    </Border>

    <lib:ZapScroller>
      <lib:ZapScroller.Resources>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="pageButtonStyle">
          <Setter Property="Width" Value="100" />
          <Setter Property="Margin" Value="5" />
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <Border DataContext="{Binding Path=Content}">
                  <TextBlock Text="{Binding Path=Tag}" Margin="2" Name="test"/>
                </Border>
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </Style>


        <Style TargetType="{x:Type ItemsControl}" x:Key="ZapScrollerCommandItemsControlStyle">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ItemsControl}">
                <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="ItemTemplate">
            <Setter.Value>
              <DataTemplate>
                <Button Command="{Binding }" Style="{StaticResource pageButtonStyle}" Content="{Binding}"/>
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </Style>

      </lib:ZapScroller.Resources>

      <lib:ZapScroller.Template>
        <ControlTemplate TargetType="{x:Type lib:ZapScroller}">
          <DockPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center" >
              <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Commands}"
                              Style="{StaticResource ZapScrollerCommandItemsControlStyle}"/>
            </StackPanel>

            <lib:ZapDecorator Name="PART_ZapDecorator">
              <lib:ZapPanel IsItemsHost="true" />
            </lib:ZapDecorator>
          </DockPanel>
        </ControlTemplate>
      </lib:ZapScroller.Template>

      <lib:ZapScroller.ItemTemplate>
        <DataTemplate>
          <Image Source="{Binding}" Margin="10"/>
        </DataTemplate>
      </lib:ZapScroller.ItemTemplate>

      <Border Padding="15,15,15,15" Tag="General">
        <StackPanel>
          <CheckBox Content="Always on top" x:Name="AlwaysOnTopCheckBox" Click="AlwaysOnTopCheckBox_Click" />
          <CheckBox Content="Minimize to the System Tray" x:Name="MinimizeToTrayCheckBox" IsChecked="{Binding Path=MinimizeToTray, ElementName=Window, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,0" />
          <CheckBox Content="Play Sounds on new Tweets" x:Name="PlaySoundsCheckBox" IsChecked="{Binding Path=PlaySounds, ElementName=Window, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,0" />
          <Label Content="Minutes between updates" d:LayoutOverrides="GridBox" Margin="0,15,0,0"/>
          <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
            <Slider Width="200" Minimum="0" Maximum="30" SmallChange="1" LargeChange="5" TickPlacement="BottomRight" x:Name="RefreshSlider" AutoToolTipPlacement="TopLeft" TickFrequency="2"/>
            <TextBlock Text="{Binding Path=Value, Converter={StaticResource RoundConverter}, ElementName=RefreshSlider, Mode=Default}" TextWrapping="Wrap" VerticalAlignment="Center" x:Name="SliderValueTextBlock" Width="20" Margin="5,0,0,0"/>
      			</StackPanel>
          <GroupBox Header="Clear Tweets" Margin="0,15,0,0">
            <StackPanel Margin="0,10,0,10">
              <Button x:Name="ClearTweetsButton" Width="120" Content="Clear All Tweets" Click="ClearTweetsButton_Click" HorizontalAlignment="Left"/>
              <Button x:Name="ClearRepliesButton" Width="120" Content="Clear All Replies" Click="ClearRepliesButton_Click" HorizontalAlignment="Left" Margin="0,10,0,0"/>
            </StackPanel>
          </GroupBox>
        </StackPanel>
      </Border>
      
      <Border Padding="15,15,15,15" Tag="Connection">
        <StackPanel>
          <GroupBox Header="Login Info">
            <StackPanel>
              <DockPanel>
                <Label Content="_Username" Width="75" Target="{Binding ElementName=UsernameTextBox}" />
                <TextBox x:Name="UsernameTextBox" TextWrapping="Wrap" IsEnabled="False" Width="150" HorizontalAlignment="Left"/>
              </DockPanel>
              <DockPanel Margin="0,5,0,0">
                <Label Content="_Password" Width="75" Target="{Binding ElementName=UsernameTextBox}" />
                <PasswordBox x:Name="PasswordTextBox" IsEnabled="False" Width="150" HorizontalAlignment="Left"/>
              </DockPanel>
              <CheckBox Content="Remember me on this computer" x:Name="PersistLoginCheckBox" IsChecked="{Binding Path=PersistLogin, ElementName=Window, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,5,0,0" />
              <Button Content="Logout" x:Name="Logout" Click="Logout_Click" Width="75" Height="21.96" HorizontalAlignment="Left" Margin="0,10,0,0"/>
            </StackPanel>
          </GroupBox>
          <GroupBox Header="Proxy Info" Margin="0,5,0,0">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <CheckBox Grid.Row="0" Grid.ColumnSpan="2" Content="Use Proxy Server" x:Name="UseProxyCheckBox" Click="UseProxyCheckBox_Click" HorizontalAlignment="Left" Grid.Column="1" Margin="5,0,0,0"/>
              <Label Content="Server" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
              <TextBox x:Name="ProxyServerTextBox" TextWrapping="Wrap" Margin="5,2,20,2" IsEnabled="False" Grid.Column="1" Grid.Row="1"/>
              <Label Content="Port" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="2"/>
              <TextBox x:Name="ProxyPortTextBox" TextWrapping="Wrap" Margin="5,2,20,2" IsEnabled="False" Grid.Column="1" Grid.Row="2" Width="75" HorizontalAlignment="Left" />
              <Label Content="Username" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="3"/>
              <TextBox x:Name="ProxyUsernameTextBox" TextWrapping="Wrap" Margin="5,2,20,2" IsEnabled="False" Grid.Column="1" Grid.Row="3"/>
              <Label Content="Password" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="4"/>
              <PasswordBox x:Name="ProxyPasswordTextBox" Margin="5,2,20,2" IsEnabled="False" Grid.Column="1" Grid.Row="4"/>
            </Grid>
          </GroupBox>
        </StackPanel>
      </Border>
      
      <Border Padding="15,15,15,15" Tag="Appearance">
        <StackPanel>
          <DockPanel HorizontalAlignment="Left" Margin="0,15,0,0">
            <Label Content="_Skin" Target="{Binding ElementName=SkinsComboBox}" VerticalAlignment="Center" Margin="0,0,5,0"/>
            <ComboBox x:Name="SkinsComboBox" SelectionChanged="SkinsComboBox_SelectionChanged" Width="Auto"/>
          </DockPanel>
        </StackPanel>
      </Border>

      <Border Tag="About">
        <Grid>
          <FlowDocumentReader>
            <FlowDocument>
              <Section>
                <Paragraph>
                  Witty v0.1.7 Beta 1
                  <LineBreak/>
                  Updated March 20, 2008
                </Paragraph>
                <Paragraph>
                  <Hyperlink NavigateUri="http://code.google.com/p/wittytwitter/" >Witty Google Code Page</Hyperlink>
                </Paragraph>
                <Paragraph>
                  Keyboard Shortcuts
                  <LineBreak/>
                  *
                  <Bold>ctrl-u</Bold> - Toggle the update area
                  <LineBreak/>
                  *
                  <Bold>ctrl-r</Bold> - Add @screenname of the selected Tweets user to the update textbox
                  <LineBreak/>
                  *
                  <Bold>ctrl-q</Bold> - Quit. Exit. Vamoose.
                  <LineBreak/>
                  *
                  <Bold>ctrl-o</Bold> - Open the options dialog.
                  <LineBreak/>
                  *
                  <Bold>ctrl-1</Bold> - Show the "Recent" tab.
                  <LineBreak/>
                  *
                  <Bold>ctrl-2</Bold> - Show the "Replies" tab.
                  <LineBreak/>
                  *
                  <Bold>ctrl-3</Bold> - Show the "User" tab.
                  <LineBreak/>
                  *
                  <Bold>ctrl-4</Bold> - Show the "Messages" tab.
                  <LineBreak/>
                  *
                  <Bold>F5</Bold> - refresh. It seemed best to stick with IE/Firefox's refresh key.
                  <LineBreak/>
                </Paragraph>
              </Section>
            </FlowDocument>
          </FlowDocumentReader>
        </Grid>
      </Border>

    </lib:ZapScroller>
  </DockPanel>
</Window>